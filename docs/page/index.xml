<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pages on Benoit Petit</title>
    <link>https://bpetit.nce.re/page/</link>
    <description>Recent content in Pages on Benoit Petit</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://bpetit.nce.re/page/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Initiatives d&#39;intérêt</title>
      <link>https://bpetit.nce.re/page/data/initiatives/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://bpetit.nce.re/page/data/initiatives/</guid>
      <description>&lt;p&gt;Ce jeu de données est alimenté dans le prisme suivant.&lt;/p&gt;&#xA;&lt;p&gt;Les &lt;strong&gt;thématiques&lt;/strong&gt; recherchées sont, de manière non exhaustive :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sols, Forêts, Biodiversité, Eau douce&lt;/li&gt;&#xA;&lt;li&gt;Économie, Politique et Réglementations&lt;/li&gt;&#xA;&lt;li&gt;Justice sociale, Équité, Féminisme, Décolonialisme, Anti-Racisme, Anti-Facsisme&lt;/li&gt;&#xA;&lt;li&gt;Technologie, Contrôle, Vie Privée, Libertés individuelles&lt;/li&gt;&#xA;&lt;li&gt;Compréhension et réduction des impacts environnementaux, secteur par secteur&lt;/li&gt;&#xA;&lt;li&gt;Mobilités et aménagement du territoire&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Les &lt;strong&gt;types&lt;/strong&gt; de projets particulièrement recherchés sont :&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Open-Data : tout projet qui partage des données de valeurs, qu&amp;rsquo;il s&amp;rsquo;agisse de cartes enrichies, d&amp;rsquo;APIs, de données brutes sous forme de fichier, etc.&lt;/li&gt;&#xA;&lt;li&gt;Open-Source : tout projet logiciel, dont le code est accessible et dont l&amp;rsquo;usage et la modification ne sont pas ou peu contraints, qui soit utile dans les thématiques citées plus haut&lt;/li&gt;&#xA;&lt;li&gt;Média : tout média, quel que soit le format, qui semble partager des valeurs communes, alimenter de manière constructive la connaissance sur les thêmes cités plus haut, appliquer une certaine éthique dans l&amp;rsquo;exercice de ses fonctions (tous ces points sont bien surs subjectifs, voir plus bas pour émettre des critiques sur les données présentes)&lt;/li&gt;&#xA;&lt;li&gt;Visualisation de données : toute inititive qui met en récit ou permet un accès plus large à des données de valeur pour comprendre nos sociétés et envisager des pistes d&amp;rsquo;action pour les transformer&lt;/li&gt;&#xA;&lt;li&gt;Alternatives radicales en terme de modèles d&amp;rsquo;organisation&lt;/li&gt;&#xA;&lt;li&gt;Organismes oeuvrant pour les citoyens, ou bénéficiant indirectement au citoyens&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;select id=&#34;filter-field&#34;&gt;&#xA;  &lt;option value=&#34;name&#34;&gt;Nom&lt;/option&gt;&#xA;  &lt;option value=&#34;url&#34;&gt;URL&lt;/option&gt;&#xA;  &lt;option value=&#34;type&#34;&gt;Type&lt;/option&gt;&#xA;  &lt;option value=&#34;themes&#34;&gt;Thêmes&lt;/option&gt;&#xA;&lt;/select&gt;&#xA;&#xA;&lt;input id=&#34;filter-value&#34; type=&#34;text&#34; placeholder=&#34;Texte à chercher&#34;&gt;&#xA;&#xA;&lt;button id=&#34;filter-clear&#34;&gt;Effacer la recherche&lt;/button&gt;&#xA;&lt;div id=&#34;data-table&#34;&gt;&lt;/div&gt;&#xA;&lt;script&gt;    &#xA;let table = document.getElementById(&#34;data-table&#34;);&#xA;&#xA;var fieldEl = document.getElementById(&#34;filter-field&#34;);&#xA;var typeEl = &#34;like&#34;;&#xA;var valueEl = document.getElementById(&#34;filter-value&#34;);&#xA;&#xA; let url = &#34;https://raw.githubusercontent.com/bpetit/blog/master/assets/initiatives.csv&#34;;&#xA;&#xA;Tabulator.extendModule(&#34;accessor&#34;, &#34;accessors&#34;, {&#xA;    removePrefix:function(value, data, accessorParams) {&#xA;      return value.replace(/http(s)*:\/\//, &#39;&#39;);&#xA;    },&#xA;});&#xA;Tabulator.extendModule(&#34;mutator&#34;, &#34;mutators&#34;, {&#xA;    cleanTags:function(value, data, accessorParams) {&#xA;      return value.replace(/&#34;/g, &#39;&#39;).replace(/\|/g, &#34;, &#34;);&#xA;    },&#xA;});&#xA;&#xA; let tabledata = [];&#xA; fetch(url)&#xA;   .then(response =&gt; response.text())&#xA;   .then(data =&gt; {&#xA;     let rows = data.split(&#34;\n&#34;);&#xA;     for (let i = 1; i &lt; rows.length; i++) {&#xA;        rowdata = rows[i].split(&#34;,&#34;);&#xA;        console.log(&#34;ROWDATA&#34;);&#xA;        console.log(rowdata);&#xA;        finalrowdata = {&#xA;          name: rowdata[0],&#xA;          url: rowdata[1],&#xA;          type: rowdata[2],&#xA;          themes: rowdata[3],&#xA;          description: rowdata[4]&#xA;        };&#xA;        &#xA;        console.log(finalrowdata);&#xA;        if (rowdata[0].length &gt; 0) {&#xA;          tabledata.push(finalrowdata);&#xA;        }&#xA;     }&#xA;     var tabulator = new Tabulator(&#34;#data-table&#34;, {&#xA;       data:tabledata,           &#xA;       layout:&#34;fitColumns&#34;,      &#xA;       responsiveLayout:&#34;hide&#34;,  &#xA;       addRowPos:&#34;top&#34;,          &#xA;       history:true,             &#xA;       pagination:&#34;local&#34;,       &#xA;       paginationSize:40,         &#xA;       paginationCounter:&#34;rows&#34;, &#xA;       movableColumns:true,      &#xA;       initialSort:[             &#xA;           {column:&#34;name&#34;, dir:&#34;asc&#34;},&#xA;       ],&#xA;       columnDefaults:{&#xA;           tooltip:true,         &#xA;       },&#xA;       columns:[                 &#xA;           {title: &#34;Name&#34;, field: &#34;name&#34;, hozAlign:&#34;center&#34;},&#xA;           {title: &#34;URL&#34;, field:&#34;url&#34;, hozAlign:&#34;left&#34;, width: 250, formatter: &#34;link&#34;, accessor:&#34;removePrefix&#34;},&#xA;           {title: &#34;Type&#34;, field:&#34;type&#34;, width: 90, editor:&#34;select&#34;},&#xA;           {title: &#34;Thêmes&#34;, field:&#34;themes&#34;, mutator: &#34;cleanTags&#34;},&#xA;           {title: &#34;Description&#34;, field:&#34;description&#34;, hozAlign:&#34;center&#34;, editor:&#34;select&#34;},&#xA;       ],&#xA;     });&#xA;    &#xA;    function customFilter(data){&#xA;        return data.car &amp;&amp; data.rating &lt; 3;&#xA;    }&#xA;    &#xA;    &#xA;    function updateFilter(){&#xA;      let table = document.getElementById(&#34;data-table&#34;);&#xA;      var filterVal = fieldEl.options[fieldEl.selectedIndex].value;&#xA;    &#xA;      var filter = filterVal == &#34;function&#34; ? customFilter : filterVal;&#xA;    &#xA;      if(filterVal == &#34;function&#34; ){&#xA;        valueEl.disabled = true;&#xA;      } else {&#xA;        valueEl.disabled = false;&#xA;      }&#xA;    &#xA;      if(filterVal){&#xA;        table.setFilter(filter,&#34;like&#34;, valueEl.value);&#xA;      }&#xA;    }&#xA;    &#xA;    &#xA;    document.getElementById(&#34;filter-field&#34;).addEventListener(&#34;change&#34;, updateFilter);&#xA;    &#xA;    document.getElementById(&#34;filter-value&#34;).addEventListener(&#34;keyup&#34;, updateFilter);&#xA;    &#xA;    &#xA;    document.getElementById(&#34;filter-clear&#34;).addEventListener(&#34;click&#34;, function(){&#xA;      fieldEl.value = &#34;&#34;;&#xA;      typeEl.value = &#34;=&#34;;&#xA;      valueEl.value = &#34;&#34;;&#xA;    &#xA;      table.clearFilter();&#xA;    });&#xA;     })&#xA;     .catch(error =&gt; console.log(error));&#xA;&lt;/script&gt;&#xA;&#xA;&lt;h2 id=&#34;une-suggestion-&#34;&gt;Une suggestion ?&lt;/h2&gt;&#xA;&lt;p&gt;N&amp;rsquo;hésitez pas à me soumettre vos suggestions et critiques sur &lt;a href=&#34;https://github.com/bpetit/blog/blob/master/assets/initiatives.csv&#34;&gt;Github&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Open-Data</title>
      <link>https://bpetit.nce.re/page/data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://bpetit.nce.re/page/data/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;initiatives&#34;&gt;Intitatives à encourager&lt;/a&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
