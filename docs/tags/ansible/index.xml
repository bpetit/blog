<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ansible on Benoit Petit</title>
    <link>https://bpetit.nce.re/tags/ansible/</link>
    <description>Recent content in Ansible on Benoit Petit</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>bpetit@nce.re (Benoit Petit)</managingEditor>
    <webMaster>bpetit@nce.re (Benoit Petit)</webMaster>
    <lastBuildDate>Sat, 17 Mar 2018 20:12:45 +0200</lastBuildDate>
    <atom:link href="https://bpetit.nce.re/tags/ansible/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating web applications proxying, DNS registration and TLS termination with ansible</title>
      <link>https://bpetit.nce.re/2018/03/automating-web-applications-proxying-dns-registration-and-tls-termination-with-ansible/</link>
      <pubDate>Sat, 17 Mar 2018 20:12:45 +0200</pubDate><author>bpetit@nce.re (Benoit Petit)</author>
      <guid>https://bpetit.nce.re/2018/03/automating-web-applications-proxying-dns-registration-and-tls-termination-with-ansible/</guid>
      <description>&lt;p&gt;For the needs of an incoming project, that I&amp;rsquo;ll describe in a later post, I needed to automate public access configuration for existing web applications. In other words, I needed to automate, proxy vhost configuration, tls termination and dns registration on a given domain. What is presented here has been used on a simple libvirt/KVM architecture (managed as described in my latest post).&lt;/p&gt;&#xA;&lt;p&gt;The workflow is this one:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;deploy the DNS entry&lt;/li&gt;&#xA;&lt;li&gt;deploy nginx vhost for the given webapp and domain name (allowing access to .well-known directory for letsencrypt http based authentication and authorization)&lt;/li&gt;&#xA;&lt;li&gt;ask for letsencrypt certificate&lt;/li&gt;&#xA;&lt;li&gt;retrieve certificate and configure tcp/443 vhost with tls&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here are the components I used:&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to build a simplistic private cloud piece by piece</title>
      <link>https://bpetit.nce.re/2017/11/how-to-build-a-simplistic-private-cloud-piece-by-piece/</link>
      <pubDate>Tue, 21 Nov 2017 20:44:12 +0200</pubDate><author>bpetit@nce.re (Benoit Petit)</author>
      <guid>https://bpetit.nce.re/2017/11/how-to-build-a-simplistic-private-cloud-piece-by-piece/</guid>
      <description>&lt;p&gt;I you are, like me, concerned about privacy, you may be the administrator of a few physical servers, either at home or rented to some dedicated server providers. Virtual machine instances (or VPS) bought in public clouds are great, but if you can&amp;rsquo;t configure yourself the underlying network and the hypervisors, where is the fun ? (just kidding, there is so much to do above a cloud-like infrastructure too). Here I&amp;rsquo;ll describe a little configuration I made for my own needs. The purpose is to deploy automatically (via ansible) virtual machines, and the networks they rely on, on multiple debian 9 kvm hypervisors. The result is really basic compared to the feature you can get, either from a public cloud service or from a fully configured and integrated private cloud software suite (let&amp;rsquo;s say OpenStack). The idea here is not to provide a full featured infrastructure, but to build a lightweight IaaS infrastructure, piece by piece. Here we will focus on virtual machines deployment and basic networking, virtual machines disks will be stored on hypervisors local hard drives (yeah, not so good for live migration, but let&amp;rsquo;s keep some fun for later).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Make Ansible Run on Debian 9</title>
      <link>https://bpetit.nce.re/2017/07/make-ansible-run-on-debian-9/</link>
      <pubDate>Thu, 27 Jul 2017 21:44:12 +0200</pubDate><author>bpetit@nce.re (Benoit Petit)</author>
      <guid>https://bpetit.nce.re/2017/07/make-ansible-run-on-debian-9/</guid>
      <description>&lt;h2 id=&#34;how-to-make-ansible-run-on-debian-9-&#34;&gt;How to make ansible run on debian 9 ?&lt;/h2&gt;&#xA;&lt;p&gt;Ansible version running: 2.3.1.0&lt;/p&gt;&#xA;&lt;p&gt;Recently I upgraded personnal servers to debian stretch, as it is the new stable version. By default, the only python version installed on stretch is python3 which is not ok for ansible playbooks to execute properly. I already met that kind of issue (like everyone else) on Ubuntu above version 16.04.&lt;/p&gt;&#xA;&lt;p&gt;Obviously the solution is to install python2.7 before running playbooks. I prefer to do that with ansible, so I have to avoid gathering_facts and run a dirty raw task on the remote host:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
