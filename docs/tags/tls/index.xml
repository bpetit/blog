<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tls on Benoit Petit&#39;s website</title>
    <link>https://bpetit.nce.re/tags/tls/</link>
    <description>Recent content in Tls on Benoit Petit&#39;s website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 17 Mar 2018 20:12:45 +0200</lastBuildDate><atom:link href="https://bpetit.nce.re/tags/tls/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating web applications proxying, DNS registration and TLS termination with ansible</title>
      <link>https://bpetit.nce.re/2018/03/automating-web-applications-proxying-dns-registration-and-tls-termination-with-ansible/</link>
      <pubDate>Sat, 17 Mar 2018 20:12:45 +0200</pubDate>
      
      <guid>https://bpetit.nce.re/2018/03/automating-web-applications-proxying-dns-registration-and-tls-termination-with-ansible/</guid>
      
        <description>&lt;p&gt;For the needs of an incoming project, that I&amp;rsquo;ll describe in a later post, I needed to automate public access configuration for existing web applications. In other words, I needed to automate, proxy vhost configuration, tls termination and dns registration on a given domain. What is presented here has been used on a simple libvirt/KVM architecture (managed as described in my latest post).&lt;/p&gt;
&lt;p&gt;The workflow is this one:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;deploy the DNS entry&lt;/li&gt;
&lt;li&gt;deploy nginx vhost for the given webapp and domain name (allowing access to .well-known directory for letsencrypt http based authentication and authorization)&lt;/li&gt;
&lt;li&gt;ask for letsencrypt certificate&lt;/li&gt;
&lt;li&gt;retrieve certificate and configure tcp/443 vhost with tls&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Here are the components I used:&lt;/p&gt;</description>
      
    </item>
    
  </channel>
</rss>